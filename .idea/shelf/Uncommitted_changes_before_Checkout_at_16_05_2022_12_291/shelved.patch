Index: src/com/gaetano/map/MapExercise.java
===================================================================
diff --git a/src/com/gaetano/map/MapExercise.java b/src/com/gaetano/map/MapExercise.java
new file mode 100644
--- /dev/null	
+++ b/src/com/gaetano/map/MapExercise.java	
@@ -0,0 +1,63 @@
+package com.gaetano.map;
+
+import java.util.*;
+
+public class MapExercise {
+    public static void main(String[] args) {
+
+        List<String> list1 = new ArrayList<>();
+
+        list1.add("gaetano");
+        list1.add("ettore");
+        list1.add("matteo");
+        list1.add("paolo");
+        list1.add("ettore");
+        list1.add("vittorio");
+        list1.add("mike");
+        list1.add("gaetano");
+        list1.add("ettore");
+        list1.add("mike");
+        list1.add("vittorio");
+        list1.add("matteo");
+        list1.add("gaetano");
+        list1.add("matteo");
+        list1.add("mike");
+        list1.add("gaetano");
+        list1.add("matteo");
+        list1.add("paolo");
+        list1.add("gaetano");
+        list1.add("mike");
+
+        Set<String> unique= new HashSet<>(list1);
+
+        System.out.println(createMap((HashSet<String>)unique,list1));
+
+
+    }
+
+    public static int countOcc(List<String> list , String name){
+        int count=0;
+
+        for (String s:list) {
+            if (s.equals(name)){
+                count++;
+            }
+
+        }
+       return count;
+
+    }
+
+
+    public static Map<String,Integer> createMap(HashSet<String> keys , List<String> l ){
+        Map<String,Integer> integerStringMap =new TreeMap<>();
+
+        for (String k: keys) {
+            integerStringMap.put(k,countOcc(l,k));
+        }
+        return integerStringMap;
+    }
+
+
+    }
+
Index: test.txt
===================================================================
diff --git a/test.txt b/test.txt
new file mode 100644
--- /dev/null	
+++ b/test.txt	
@@ -0,0 +1,1 @@
+una nuova modifica
\ No newline at end of file
Index: src/com/gaetano/files/WriteRead.java
===================================================================
diff --git a/src/com/gaetano/files/WriteRead.java b/src/com/gaetano/files/WriteRead.java
new file mode 100644
--- /dev/null	
+++ b/src/com/gaetano/files/WriteRead.java	
@@ -0,0 +1,43 @@
+package com.gaetano.files;
+
+import java.io.*;
+
+
+public class WriteRead {
+    public static void main(String[] args) {
+        File test = new File("test.txt");
+        WriteFile(test,"prova scrittura\naggiungo un'altra riga");
+        readFile(test);
+
+
+    }
+    public static void WriteFile(File titolo , String testo){
+        try {
+            FileWriter scrivi = new FileWriter(titolo);
+            scrivi.write(testo);
+            scrivi.close();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+    }
+    public static void readFile(File titolo){
+        try {
+            FileReader leggi = new FileReader(titolo);
+            int testo = leggi.read();
+            while (testo!=-1){
+                System.out.print((char)testo);  //senza il char leggo codice ascii;
+                testo=leggi.read();
+            }
+
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+    }
+    public static void editFile(File titolo , String testo){
+
+    }
+}
Index: src/com/gaetano/potenz/TestPotenza.java
===================================================================
diff --git a/src/com/gaetano/potenz/TestPotenza.java b/src/com/gaetano/potenz/TestPotenza.java
new file mode 100644
--- /dev/null	
+++ b/src/com/gaetano/potenz/TestPotenza.java	
@@ -0,0 +1,36 @@
+package com.gaetano.potenz;
+
+public class TestPotenza {
+    public static void main(String[] args) {
+
+        Potenza pot = new Potenza(3);
+        Potenza pot2 = new Potenza(4);
+        pot.pow();
+        pot2.pow();
+        pot.cambioBase(10);
+        pot2.cambioBase(5);
+
+        pot.pow();
+        pot2.pow();
+
+
+
+    }
+
+    public static class Potenza {
+        int x;
+
+        public Potenza(int y) {
+            x = y;
+        }
+
+        public void pow() {
+            System.out.println(x*x);
+        }
+
+        public void cambioBase(int z) {
+            x = z;
+        }
+
+    }
+}
